name: Release Obsidian plugin

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1, patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update versions and create tag (if workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          
          # Update manifest.json
          sed -i 's/"version": ".*"/"version": "'$NEW_VERSION'"/' manifest.json
          
          # Commit and tag
          git add package.json manifest.json
          git commit -m "Bump version to $NEW_VERSION"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin HEAD
          git push origin "v$NEW_VERSION"

      - name: Update manifest version (if tag push)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          tag="${GITHUB_REF#refs/tags/}"
          echo "Updating manifest.json version to $tag"
          sed -i 's/"version": ".*"/"version": "'$tag'"/' manifest.json
          
      - name: Build plugin
        run: |
          npm install
          npm run build

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            tag="$NEW_VERSION"
          else
            tag="${GITHUB_REF#refs/tags/}"
          fi

          gh release create "$tag" \
            --title="$tag" \
            --draft \
            main.js manifest.json styles.css